using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace SnailRace
{
    class Program
    {
        static void Main(string[] args)
        {
            int tracklength = 330;

            int positionSnailOne = 0;
            int positionSnailTwo = 0;

            string snailOneName;
            string snailTwoName;

            int snailOneMinSpeed;
            int snailOneMaxSpeed;

            int snailTwoMinSpeed;
            int snailTwoMaxSpeed;



            Console.WriteLine("Welcome to the races!");
            Console.WriteLine("");
            Console.WriteLine("What is the first snail name?");
            snailOneName = Console.ReadLine();
            Console.WriteLine("What is the first snails minimum speed?");
            snailOneMinSpeed = Int32.Parse(Console.ReadLine());
            Console.WriteLine("What is the first snails maximum speed?");
            snailOneMaxSpeed = Int32.Parse(Console.ReadLine());

            Console.WriteLine("What is the second snail name?");
            snailTwoName = Console.ReadLine();
            Console.WriteLine("What is the second snails minimum speed?");
            snailTwoMinSpeed = Int32.Parse(Console.ReadLine());
            Console.WriteLine("What is the second snails maximum speed?");
            snailTwoMaxSpeed = Int32.Parse(Console.ReadLine());


            if (snailOneMinSpeed > snailOneMaxSpeed)
            {
                int tempInt = snailOneMinSpeed;
                snailOneMinSpeed = snailOneMaxSpeed;
                snailOneMaxSpeed = tempInt;
            }

            if (snailTwoMinSpeed > snailTwoMaxSpeed)
            {
                int tempInt = snailTwoMinSpeed;
                snailTwoMinSpeed = snailTwoMaxSpeed;
                snailTwoMaxSpeed = tempInt;
            }



            var snailOne = new Snail(snailOneMinSpeed, snailOneMaxSpeed, snailOneName);
            var snailTwo = new Snail(snailTwoMinSpeed, snailTwoMaxSpeed, snailTwoName);

            Console.WriteLine("On your marks!");
            Thread.Sleep(200);
            Console.WriteLine("Get set!");
            Thread.Sleep(200);
            Console.WriteLine("GO!");

            while (positionSnailOne < tracklength || positionSnailTwo < tracklength)
            {
                int snailOneTravel;
                snailOneTravel = snailOne.Move();
                positionSnailOne += snailOneTravel;

                Console.WriteLine($"{snailOne.ToString()} has moved {snailOneTravel}mm to {positionSnailOne}mm");

                if (positionSnailOne > tracklength)
                {
                    Console.WriteLine($"{snailOne.ToString()} wins!");
                    break;
                }
                Thread.Sleep(400);

                int snailTwoTravel;
                snailTwoTravel = snailTwo.Move();
                positionSnailTwo += snailTwoTravel;

                Console.WriteLine($"{snailTwo.ToString()} has moved {snailTwoTravel}mm to {positionSnailTwo}mm");

                if (positionSnailTwo > tracklength)
                {
                    Console.WriteLine($"{snailTwo.ToString()} wins!");
                    break;
                }
                Thread.Sleep(400);
                Console.WriteLine("Next round!");
            }

            Console.ReadKey();

        }
    }
}
